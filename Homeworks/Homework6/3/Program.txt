import java.util.Scanner;

public class Program{
    static Scanner inp = new Scanner(System.in);

    public static double kvadrat(double x, int y) {
        int temp = 1;
        for (int i = 1; i <= y; i++) {
            temp *= x;
        }
        return temp;
    }

    public static double integralPryamo(double a, double b, double n, int y) {
        double h = (b - a) / n;//расстояние между двумя точками в нашем разбиении

        double res = 0;
        for (double x = a; x <= b; x += h) {
            //рассчитаем площадь текущего прямоугольника
            double s = kvadrat(x, y) * h;
            res += s;
        }
        return res;
    }

    public static double metodSimpsona(double a, double b, int n, int y) {
        double sum = 0;
        double sum2 = 0;
        double[] x = new double[n];
        double h = (b - a) / n;
        for (int i = 0; i < n; i++) {
            x[i] = a + i * h;
        }
        for (int i = 1; i < n; i++) {
            sum += kvadrat(x[i], y);
            sum2 += kvadrat((x[i - 1] + x[i]) / 2, y);
        }
        return h / 6 * (kvadrat(a, y) + kvadrat(b, y) + 2 * sum + 4 * (sum2 + b));
    }

    public static void main(String[] args) {
        System.out.println("введите число");
        double x = inp.nextDouble();
        System.out.println("введите степень, в которую хотите возвести число ");
        int y = inp.nextInt();
        System.out.println("результат = " + kvadrat(x, y));

        int ns[] = {100, 1000, 10000, 100000, 1000000}; // разбиения
        int ys[] = {2, 3, 4, 5, 6, 7}; // степени

        System.out.println("введите нижнюю границу интегрирования :");
        double a = inp.nextDouble();//нижняя граница интегрирования
        System.out.println("введите верхнюю границу интегрирования : ");
        double b = inp.nextDouble();//верхняя граница интегрирования

        for (int i = 0; i < ns.length; i++) {
            for (int j = 0; j < ys.length; j++) {
                System.out.print("МЕТОД СИМПСОНА - ");
                System.out.print(+ns[i] + " - ");
                System.out.print("x^" + ys[j] + " = ");
                System.out.print(metodSimpsona(a, b, ns[i], ys[j]));
                System.out.println();
            }

        }

        for (int i = 0; i < ns.length; i++) {
            for (int j = 0; j < ys.length; j++) {
                System.out.print("МЕТОД ПРЯМОУГОЛЬНИКОВ - ");
                System.out.print(+ns[i] + " - ");
                System.out.print("x^" + ys[j] + " = ");
                System.out.print(integralPryamo(a, b, ns[i], ys[j]));
                System.out.println();
            }

        }
    }
}
